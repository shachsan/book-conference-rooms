{"ast":null,"code":"import _toConsumableArray from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/App.js\";\nimport React from \"react\";\nimport SchedulePageContainer from './containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      schedules: [],\n      scheduleId: '',\n      bookForm: {\n        start_time: '',\n        end_time: '',\n        event: ''\n      }\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.onChangeBookForm = function (e) {\n      // console.log(e.target.name);\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm[e.target.name] = e.target.value;\n\n      _this.setState({\n        bookForm: newBookForm\n      });\n    };\n\n    _this.onSubmitFormHandler = function (e, room) {\n      e.preventDefault();\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newBooking = _objectSpread({}, newBookForm, {\n        date: _this.state.selectedDate,\n        id: _this.state.scheduleId\n      });\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.name === room) {\n          lectureRoom.lecture_schedules = [].concat(_toConsumableArray(lectureRoom.lecture_schedules), [newBooking]);\n        }\n      }); //for optimistic update\n\n      _this.setState({\n        schedules: newSchedule\n      }); //obtain \n\n\n      var reservation = {\n        event: _this.state.bookForm.event,\n        date: _this.state.selectedDate,\n        start_time: _this.state.bookForm.start_time,\n        end_time: _this.state.bookForm.end_time,\n        mod_id: 3,\n        lecture_room_id: 2 //fetch post to lecture_schedules\n\n      };\n      fetch('http://localhost:3000/api/v1/lecture_schedules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      }); //fetch post to lecture_schedules\n      // id: 1,\n      // event: \"Mod1 Ruby fundamental\",\n      // date: \"2019-01-22\",\n      // day: \"Tuesday\",\n      // start_time: \"2000-01-01T09:30:00.000Z\",\n      // end_time: \"2000-01-01T11:00:00.000Z\",\n      // mod_id: 1,\n      // lecture_room_id: 1\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/lecture_rooms').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          schedules: schedules\n        });\n      });\n      fetch('http://localhost:3000/api/v1/lecture_schedules').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          scheduleId: schedules.length + 1\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon swing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"date_range\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Book \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Lecture Room\")))), React.createElement(SchedulePageContainer, {\n        currentMonth: this.state.currentMonth,\n        selectedDate: this.state.selectedDate,\n        nextMonth: this.nextMonth,\n        prevMonth: this.prevMonth,\n        onDateClick: this.onDateClick,\n        schedules: this.state.schedules,\n        onBookItHandler: this.onSubmitFormHandler,\n        onChangeBookForm: this.onChangeBookForm,\n        event: this.state.bookForm.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/App.js"],"names":["React","SchedulePageContainer","dateFns","App","state","currentMonth","Date","selectedDate","schedules","scheduleId","bookForm","start_time","end_time","event","nextMonth","setState","addMonths","prevMonth","subMonths","onDateClick","day","onChangeBookForm","e","newBookForm","target","name","value","onSubmitFormHandler","room","preventDefault","format","newBooking","date","id","newSchedule","forEach","lectureRoom","lecture_schedules","reservation","mod_id","lecture_room_id","fetch","method","headers","body","JSON","stringify","then","res","json","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SchedulePageContainer from './containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n      state = {\n        currentMonth: new Date(),\n        selectedDate: new Date(),\n        schedules:[],\n        scheduleId:'',\n        bookForm:{\n          start_time:'',\n          end_time:'',\n          event:''\n        }\n\n    };\n\n    nextMonth = () => {\n      this.setState({\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n      });\n    };\n    prevMonth = () => {\n      this.setState({\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n      });\n    };\n\n    onDateClick = day => {\n      this.setState({\n        selectedDate: day\n      });\n    };\n\n    onChangeBookForm=(e) => {\n      // console.log(e.target.name);\n      const newBookForm={...this.state.bookForm}\n      newBookForm[e.target.name]=e.target.value\n      this.setState({\n        bookForm:newBookForm\n      })\n    }\n    \n    onSubmitFormHandler=(e, room) => {\n      e.preventDefault();\n      \n        const newBookForm={...this.state.bookForm}\n        newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n        newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n        \n        const newBooking= {...newBookForm, date:this.state.selectedDate, id:this.state.scheduleId}\n\n        let newSchedule=[...this.state.schedules]\n        newSchedule.forEach(lectureRoom=>{\n          if(lectureRoom.name===room){\n            lectureRoom.lecture_schedules=[...lectureRoom.lecture_schedules, newBooking]\n          }\n\n        })\n        \n        //for optimistic update\n        this.setState({\n          schedules:newSchedule\n        })\n\n        //obtain \n        const reservation={\n          event:this.state.bookForm.event,\n          date:this.state.selectedDate,\n          start_time:this.state.bookForm.start_time,\n          end_time:this.state.bookForm.end_time,\n          mod_id:3,\n          lecture_room_id:2,\n        }\n        //fetch post to lecture_schedules\n        fetch('http://localhost:3000/api/v1/lecture_schedules',{\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify(reservation)\n        })\n\n\n          //fetch post to lecture_schedules\n\n          // id: 1,\n          // event: \"Mod1 Ruby fundamental\",\n          // date: \"2019-01-22\",\n          // day: \"Tuesday\",\n          // start_time: \"2000-01-01T09:30:00.000Z\",\n          // end_time: \"2000-01-01T11:00:00.000Z\",\n          // mod_id: 1,\n          // lecture_room_id: 1\n      \n    }\n\n    componentDidMount(){\n      fetch('http://localhost:3000/api/v1/lecture_rooms')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({schedules}))\n\n      fetch('http://localhost:3000/api/v1/lecture_schedules')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({scheduleId:schedules.length+1}))\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div id=\"logo\">\n            <span className=\"icon swing\">date_range</span>\n            <span>\n              Book <b>Lecture Room</b>\n            </span>\n          </div>\n        </header>\n        \n          <SchedulePageContainer \n              currentMonth={this.state.currentMonth}\n              selectedDate={this.state.selectedDate}\n              nextMonth={this.nextMonth}\n              prevMonth={this.prevMonth}\n              onDateClick={this.onDateClick}\n              schedules={this.state.schedules}\n              onBookItHandler={this.onSubmitFormHandler}\n              onChangeBookForm={this.onChangeBookForm}\n              event={this.state.bookForm.event}\n          />\n          \n        \n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js\";\nimport React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\nimport \"../App.css\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      selectedMod: '',\n      schedules: [],\n      scheduleId: '',\n      bookForm: {\n        start_time: '',\n        end_time: '',\n        event: ''\n      }\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.convertToTime = function (min) {\n      if (!min.includes(':')) {\n        var hours, minutes, ampm;\n        hours = Math.floor(min / 60);\n        minutes = min % 60;\n\n        if (minutes < 10) {\n          minutes = '0' + minutes; // adding leading zero\n        }\n\n        if (hours < 10) hours = '0' + hours;\n        return hours + ':' + minutes;\n      } else {\n        return min;\n      }\n    };\n\n    _this.onChangeBookForm = function (e) {\n      // console.log(e.target.name);\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm[e.target.name] = e.target.value;\n      newBookForm.start_time = _this.convertToTime(newBookForm.start_time);\n      newBookForm.end_time = _this.convertToTime(newBookForm.end_time); //   console.log(newBookForm);\n\n      _this.setState({\n        bookForm: newBookForm\n      });\n    };\n\n    _this.onDeleteHandler = function (sche) {\n      fetch(\"http://localhost:3000/api/v1/lecture_schedules/\".concat(id), {\n        method: 'DELETE'\n      });\n    };\n\n    _this.onSubmitFormHandler = function (e, room) {\n      e.preventDefault();\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      var roomId;\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newBooking = _objectSpread({}, newBookForm, {\n        date: _this.state.selectedDate,\n        id: _this.state.scheduleId\n      });\n\n      console.log('schedules:', _this.state.schedules[0].lecture_schedules);\n      console.log('newBooking:', newBooking);\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.name === room) {\n          roomId = lectureRoom.id;\n          lectureRoom.lecture_schedules = [].concat(_toConsumableArray(lectureRoom.lecture_schedules), [newBooking]);\n        }\n      }); //for optimistic update\n\n      _this.setState({\n        schedules: newSchedule,\n        bookForm: {\n          start_time: '',\n          end_time: '',\n          event: ''\n        }\n      }); //obtain mod_id  dynamically\n\n\n      var reservation = {\n        event: _this.state.bookForm.event,\n        date: _this.state.selectedDate,\n        start_time: _this.state.bookForm.start_time,\n        end_time: _this.state.bookForm.end_time,\n        mod_id: 3,\n        lecture_room_id: roomId //fetch post to lecture_schedules\n\n      };\n      fetch('http://localhost:3000/api/v1/lecture_schedules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/lecture_rooms').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          schedules: schedules\n        });\n      });\n      fetch('http://localhost:3000/api/v1/lecture_schedules').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          scheduleId: schedules.length + 1\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Book \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Lecture Room\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon swing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"date_range\"))), React.createElement(SchedulePageContainer, {\n        currentMonth: this.state.currentMonth,\n        selectedDate: this.state.selectedDate,\n        nextMonth: this.nextMonth,\n        prevMonth: this.prevMonth,\n        onDateClick: this.onDateClick,\n        schedules: this.state.schedules,\n        onBookItHandler: this.onSubmitFormHandler,\n        onChangeBookForm: this.onChangeBookForm,\n        event: this.state.bookForm.event,\n        onDeleteHandler: this.onDeleteHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js"],"names":["React","SchedulePageContainer","dateFns","Home","state","currentMonth","Date","selectedDate","selectedMod","schedules","scheduleId","bookForm","start_time","end_time","event","nextMonth","setState","addMonths","prevMonth","subMonths","onDateClick","day","convertToTime","min","includes","hours","minutes","ampm","Math","floor","onChangeBookForm","e","newBookForm","target","name","value","onDeleteHandler","sche","fetch","id","method","onSubmitFormHandler","room","preventDefault","roomId","format","newBooking","date","console","log","lecture_schedules","newSchedule","forEach","lectureRoom","reservation","mod_id","lecture_room_id","headers","body","JSON","stringify","then","res","json","length","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\n\nimport \"../App.css\";\n\nclass Home extends React.Component {\n      state = {\n        currentMonth: new Date(),\n        selectedDate: new Date(),\n        selectedMod:'',\n        schedules:[],\n        scheduleId:'',\n        bookForm:{\n          start_time:'',\n          end_time:'',\n          event:''\n        }\n\n    };\n\n    nextMonth = () => {\n      this.setState({\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n      });\n    };\n    prevMonth = () => {\n      this.setState({\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n      });\n    };\n\n    onDateClick = day => {\n      this.setState({\n        selectedDate: day\n      });\n    };\n\n    convertToTime=(min) => {\n        if(!min.includes(':')){\n            let hours, minutes, ampm;\n            hours = Math.floor(min / 60);\n            minutes = min % 60;\n            if (minutes < 10){\n                minutes = '0' + minutes; // adding leading zero\n            }\n           \n            if (hours < 10)\n                hours='0'+ hours\n\n            return hours+':'+minutes\n        }else{\n            return min\n        }\n    }\n\n    onChangeBookForm=(e) => {\n      // console.log(e.target.name);\n      const newBookForm={...this.state.bookForm}\n\n      newBookForm[e.target.name]=e.target.value\n      newBookForm.start_time=this.convertToTime(newBookForm.start_time)\n      newBookForm.end_time=this.convertToTime(newBookForm.end_time)\n    //   console.log(newBookForm);\n      this.setState({\n        bookForm:newBookForm\n      })\n    }\n\n    //Delete schedule Handler\n    onDeleteHandler=(sche) => {\n\n        fetch(`http://localhost:3000/api/v1/lecture_schedules/${id}`,{\n          method:'DELETE'\n        })\n    }\n    \n    onSubmitFormHandler=(e, room) => {\n      e.preventDefault();\n      \n        const newBookForm={...this.state.bookForm}\n        let roomId;\n        newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n        newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n        \n        const newBooking= {...newBookForm, date:this.state.selectedDate, id:this.state.scheduleId}\n        console.log('schedules:',this.state.schedules[0].lecture_schedules);\n        console.log('newBooking:',newBooking);\n        \n        let newSchedule=[...this.state.schedules]\n        newSchedule.forEach(lectureRoom=>{\n          if(lectureRoom.name===room){\n            roomId=lectureRoom.id\n            lectureRoom.lecture_schedules=[...lectureRoom.lecture_schedules, newBooking]\n          }\n\n        })\n        \n        //for optimistic update\n        this.setState({\n          schedules:newSchedule,\n          bookForm:{\n            start_time:'',\n            end_time:'',\n            event:''\n          }\n        })\n\n        //obtain mod_id  dynamically\n        const reservation={\n          event:this.state.bookForm.event,\n          date:this.state.selectedDate,\n          start_time:this.state.bookForm.start_time,\n          end_time:this.state.bookForm.end_time,\n          mod_id:3,\n          lecture_room_id:roomId,\n        }\n        //fetch post to lecture_schedules\n        fetch('http://localhost:3000/api/v1/lecture_schedules',{\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify(reservation)\n        })\n      \n    }\n\n    componentDidMount(){\n      fetch('http://localhost:3000/api/v1/lecture_rooms')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({schedules}))\n\n      fetch('http://localhost:3000/api/v1/lecture_schedules')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({scheduleId:schedules.length+1}))\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <div id=\"logo\">\n            <span>\n              Book <b>Lecture Room</b>\n            </span><br/>\n            <span className=\"icon swing\">date_range</span>\n          </div>\n        </header>\n        \n          <SchedulePageContainer \n              currentMonth={this.state.currentMonth}\n              selectedDate={this.state.selectedDate}\n              nextMonth={this.nextMonth}\n              prevMonth={this.prevMonth}\n              onDateClick={this.onDateClick}\n              schedules={this.state.schedules}\n              onBookItHandler={this.onSubmitFormHandler}\n              onChangeBookForm={this.onChangeBookForm}\n              event={this.state.bookForm.event}\n              onDeleteHandler={this.onDeleteHandler}\n          />\n          \n        \n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}
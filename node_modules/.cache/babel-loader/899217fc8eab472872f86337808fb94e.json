{"ast":null,"code":"import _objectSpread from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js\";\nimport React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\nimport \"../App.css\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      selectedMod: '',\n      allMods: [],\n      modClick: '',\n      sort: '',\n      schedules: [],\n      newScheduleId: '',\n      bookForm: {\n        start_time: '',\n        end_time: '',\n        event: ''\n      }\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.convertToTime = function (min) {\n      if (!min.includes(':')) {\n        var hours, minutes;\n        hours = Math.floor(min / 60);\n        minutes = min % 60;\n\n        if (minutes < 10) {\n          minutes = '0' + minutes; // adding leading zero\n        }\n\n        if (hours < 10) hours = '0' + hours;\n        return hours + ':' + minutes;\n      } else {\n        return min;\n      }\n    };\n\n    _this.getModName = function (modId) {\n      var mod = _this.state.allMods.filter(function (mod) {\n        return mod.id === modId;\n      });\n\n      return mod[0].name;\n    };\n\n    _this.onChangeSortHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  sort: e.target.value\n                });\n\n              case 2:\n                _this.sortSchedules(_this.state.sort);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.sortSchedules = function (type) {\n      if (type === 'time') {\n        var newSchedule = _toConsumableArray(_this.state.schedules);\n\n        newSchedule.forEach(function (lectureRoom) {\n          lectureRoom.lecture_schedules.sort(function (s1, s2) {\n            if (s1.start_time > s2.start_time) return 1;else if (s1.start_time < s2.start_time) return -1;\n          });\n        });\n\n        _this.setState({\n          schedules: newSchedule\n        });\n      } else if (type === 'mod') {\n        var _newSchedule = _toConsumableArray(_this.state.schedules);\n\n        _newSchedule.forEach(function (lectureRoom) {\n          lectureRoom.lecture_schedules.sort(function (s1, s2) {\n            s1.modName = _this.getModName(s1.mod_id);\n            s2.modName = _this.getModName(s2.mod_id);\n            console.log(s1.modName);\n            if (s1.modName > s2.modName) return 1;else if (s1.modName < s2.modName) return -1;\n          });\n        });\n\n        _this.setState({\n          schedules: _newSchedule\n        });\n      }\n    };\n\n    _this.renderMod = function (e) {\n      _this.setState({\n        modClick: e.target.id\n      });\n\n      console.log(e.target.id); // showMod:e.target.value\n    };\n\n    _this.onChangeModSelectionHandler = function (e) {\n      _this.setState({\n        selectedMod: e.target.value\n      });\n    };\n\n    _this.onChangeBookForm = function (e) {\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm[e.target.name] = e.target.value;\n      newBookForm.start_time = _this.convertToTime(newBookForm.start_time);\n      newBookForm.end_time = _this.convertToTime(newBookForm.end_time);\n\n      _this.setState({\n        bookForm: newBookForm\n      });\n    };\n\n    _this.onEditHandler = function (e, schedule) {\n      e.preventDefault();\n      console.log('schedule to be edited:', schedule);\n      console.log('new schedule', _this.state.bookForm);\n      var updateSch;\n      var id = schedule.id;\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.id === schedule.lecture_room_id) {\n          lectureRoom.lecture_schedules.forEach(function (sch) {\n            if (sch.id === schedule.id) {\n              sch.start_time = newBookForm.start_time;\n              sch.end_time = newBookForm.end_time;\n              sch.event = newBookForm.event; // sch.event=newBookForm.\n\n              updateSch = {\n                start_time: newBookForm.start_time,\n                end_time: newBookForm.end_time,\n                event: newBookForm.event // mod_id:this.state.selectedMod\n\n              };\n              console.log('change event', sch.event);\n            }\n          });\n        }\n      });\n      fetch(\"http://localhost:3000/api/v1/lecture_schedules/\".concat(id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateSch)\n      });\n    };\n\n    _this.onDeleteHandler = function (schedule) {\n      var id = schedule.id;\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (room) {\n        if (room.id === schedule.lecture_room_id) {\n          room.lecture_schedules.forEach(function (sch) {\n            if (sch.id === schedule.id) {\n              var i = room.lecture_schedules.indexOf(sch);\n              room.lecture_schedules.splice(i, 1);\n            }\n          });\n        }\n      });\n\n      _this.setState({\n        schedules: newSchedule\n      });\n\n      fetch(\"http://localhost:3000/api/v1/lecture_schedules/\".concat(id), {\n        method: 'DELETE'\n      });\n    };\n\n    _this.onSubmitFormHandler = function (e, room) {\n      e.preventDefault(); //fetch post to lecture_schedules\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      var roomId;\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newBooking = _objectSpread({}, newBookForm, {\n        date: _this.state.selectedDate,\n        id: _this.state.newScheduleId,\n        mod_id: _this.state.selectedMod\n      });\n\n      console.log(newBooking);\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.name === room) {\n          roomId = lectureRoom.id;\n          lectureRoom.lecture_schedules = [].concat(_toConsumableArray(lectureRoom.lecture_schedules), [newBooking]);\n        }\n      });\n      console.log('before optimistic', newSchedule); //for optimistic update\n\n      _this.setState({\n        schedules: newSchedule,\n        bookForm: {\n          start_time: '',\n          end_time: '',\n          event: ''\n        }\n      }); //setting new schedule for fetch post\n\n\n      var reservation = {\n        event: _this.state.bookForm.event,\n        date: _this.state.selectedDate,\n        start_time: _this.state.bookForm.start_time,\n        end_time: _this.state.bookForm.end_time,\n        mod_id: _this.state.selectedMod,\n        lecture_room_id: roomId //fetch post to lecture_schedules\n\n      };\n      fetch('http://localhost:3000/api/v1/lecture_schedules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (justAddedSch) {\n        return _this.setState({\n          newScheduleId: justAddedSch.id\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/lecture_rooms').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          schedules: schedules\n        });\n      });\n      fetch('http://localhost:3000/api/v1/mods').then(function (res) {\n        return res.json();\n      }).then(function (mods) {\n        return _this2.setState({\n          allMods: mods\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('start time home render', this.state.bookForm);\n      console.log('type of start time', typeof this.state.bookForm.start_time);\n      console.log('start time empty?', this.state.bookForm.start_time === '');\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Book \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Lecture Room\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"icon swing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"date_range\"))), React.createElement(SchedulePageContainer, {\n        currentMonth: this.state.currentMonth,\n        renderMod: this.renderMod,\n        clickMod: true,\n        selectedDate: this.state.selectedDate,\n        nextMonth: this.nextMonth,\n        prevMonth: this.prevMonth,\n        onDateClick: this.onDateClick,\n        schedules: this.state.schedules,\n        onBookItHandler: this.onSubmitFormHandler,\n        onChangeBookForm: this.onChangeBookForm,\n        event: this.state.bookForm.event,\n        bookForm: this.state.bookForm,\n        onDeleteHandler: this.onDeleteHandler,\n        onEditHandler: this.onEditHandler,\n        selectedMod: this.state.selectedMod,\n        onChangeModSelectionHandler: this.onChangeModSelectionHandler,\n        allMods: this.state.allMods,\n        onChangeSortHandler: this.onChangeSortHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js"],"names":["React","SchedulePageContainer","dateFns","Home","state","currentMonth","Date","selectedDate","selectedMod","allMods","modClick","sort","schedules","newScheduleId","bookForm","start_time","end_time","event","nextMonth","setState","addMonths","prevMonth","subMonths","onDateClick","day","convertToTime","min","includes","hours","minutes","Math","floor","getModName","modId","mod","filter","id","name","onChangeSortHandler","e","target","value","sortSchedules","type","newSchedule","forEach","lectureRoom","lecture_schedules","s1","s2","modName","mod_id","console","log","renderMod","onChangeModSelectionHandler","onChangeBookForm","newBookForm","onEditHandler","schedule","preventDefault","updateSch","format","lecture_room_id","sch","fetch","method","headers","body","JSON","stringify","onDeleteHandler","room","i","indexOf","splice","onSubmitFormHandler","roomId","newBooking","date","reservation","then","res","json","justAddedSch","mods","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\n\nimport \"../App.css\";\n\nclass Home extends React.Component {\n      state = {\n        currentMonth: new Date(),\n        selectedDate: new Date(),\n        selectedMod:'',\n        allMods:[],\n        modClick:'',\n        sort:'',\n        schedules:[],\n        newScheduleId:'',\n        bookForm:{\n          start_time:'',\n          end_time:'',\n          event:''\n        }\n\n    };\n\n    nextMonth = () => {\n      this.setState({\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n      });\n    };\n    prevMonth = () => {\n      this.setState({\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n      });\n    };\n\n    onDateClick = day => {\n      this.setState({\n        selectedDate: day\n      });\n    };\n\n    convertToTime=(min) => {\n        if(!min.includes(':')){\n            let hours, minutes;\n            hours = Math.floor(min / 60);\n            minutes = min % 60;\n            if (minutes < 10){\n                minutes = '0' + minutes; // adding leading zero\n            }\n           \n            if (hours < 10)\n                hours='0'+ hours\n\n            return hours+':'+minutes\n        }else{\n            return min\n        }\n    }\n\n    getModName=(modId) => {\n        const mod=this.state.allMods.filter(mod=>mod.id===modId)\n        return mod[0].name;\n    }\n\n    \n    onChangeSortHandler=async(e) => {\n        await this.setState({\n            sort:e.target.value\n        })\n\n        this.sortSchedules(this.state.sort);\n    }\n\n    //sort function\n    sortSchedules=(type) => {\n        if (type==='time'){\n            const newSchedule = [...this.state.schedules]\n            newSchedule.forEach(lectureRoom=>{\n                  lectureRoom.lecture_schedules.sort((s1, s2)=>{\n                            if (s1.start_time > s2.start_time)\n                                return 1\n                            else if (s1.start_time < s2.start_time)\n                                return -1\n                    })\n            })\n\n            this.setState({\n                schedules:newSchedule\n            })\n        }else if(type==='mod'){\n            const newSchedule = [...this.state.schedules]\n            newSchedule.forEach(lectureRoom=>{\n                  lectureRoom.lecture_schedules.sort((s1, s2)=>{\n                        s1.modName=this.getModName(s1.mod_id)\n                        s2.modName=this.getModName(s2.mod_id)\n                        console.log(s1.modName);\n                            if (s1.modName > s2.modName)\n                                return 1\n                            else if (s1.modName < s2.modName)\n                                return -1\n                    })\n            })\n\n            this.setState({\n                schedules:newSchedule\n            })\n        }\n\n    }\n\n    renderMod=(e) => {\n        this.setState({\n\n            modClick:e.target.id\n        })\n        console.log(e.target.id);\n        // showMod:e.target.value\n    }\n\n    //Handle when mod selected during lecture room suggestion\n    onChangeModSelectionHandler=(e) => {\n         this.setState({\n            selectedMod:e.target.value,\n        })\n    }\n\n    onChangeBookForm=(e) => {\n        \n        \n      const newBookForm={...this.state.bookForm}\n\n      newBookForm[e.target.name]=e.target.value\n      newBookForm.start_time=this.convertToTime(newBookForm.start_time)\n      newBookForm.end_time=this.convertToTime(newBookForm.end_time)\n      \n      this.setState({\n        bookForm:newBookForm\n      })\n    }\n\n    //Edit schedule\n    onEditHandler=(e,schedule) => {\n        e.preventDefault();\n        console.log('schedule to be edited:', schedule);\n        console.log('new schedule', this.state.bookForm);\n        let updateSch;\n        const id=schedule.id;\n\n        const newBookForm={...this.state.bookForm}\n        newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n        newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n        \n        \n        let newSchedule=[...this.state.schedules]\n        newSchedule.forEach(lectureRoom=>{\n          if(lectureRoom.id===schedule.lecture_room_id){\n            lectureRoom.lecture_schedules.forEach(sch=>{\n                if(sch.id===schedule.id){\n                    sch.start_time=newBookForm.start_time\n                    sch.end_time=newBookForm.end_time\n                    sch.event=newBookForm.event\n                    // sch.event=newBookForm.\n                    updateSch={\n                        start_time:newBookForm.start_time,\n                        end_time:newBookForm.end_time,\n                        event:newBookForm.event,\n                        // mod_id:this.state.selectedMod\n                    }\n                    console.log('change event',sch.event);\n                }\n            })\n          }\n\n        })\n\n        fetch(`http://localhost:3000/api/v1/lecture_schedules/${id}`,{\n            method: 'PATCH',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify(updateSch)\n        })\n    }\n\n    //Delete schedule Handler\n    onDeleteHandler=(schedule) => {\n        const id=schedule.id\n        let newSchedule=[...this.state.schedules];\n            newSchedule.forEach(room=>{\n                if(room.id===schedule.lecture_room_id){\n                    room.lecture_schedules.forEach(sch=>{\n                        if(sch.id===schedule.id){\n                            let i=room.lecture_schedules.indexOf(sch);\n                            room.lecture_schedules.splice(i,1)\n                        }\n                    })\n                }\n            })\n\n        this.setState({\n            schedules:newSchedule\n        })\n\n        fetch(`http://localhost:3000/api/v1/lecture_schedules/${id}`,{\n          method:'DELETE'\n        })\n    }\n    \n    onSubmitFormHandler=(e, room) => {\n      e.preventDefault();\n       //fetch post to lecture_schedules\n       \n       const newBookForm={...this.state.bookForm}\n       let roomId;\n       newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n       newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n       \n       const newBooking= {...newBookForm, date:this.state.selectedDate, id:this.state.newScheduleId, mod_id:this.state.selectedMod}\n       console.log(newBooking);\n       let newSchedule=[...this.state.schedules]\n       newSchedule.forEach(lectureRoom=>{\n           if(lectureRoom.name===room){\n               roomId=lectureRoom.id\n               lectureRoom.lecture_schedules=[...lectureRoom.lecture_schedules, newBooking]\n            }\n            \n        })\n        \n        console.log('before optimistic',newSchedule);\n        //for optimistic update\n        this.setState({\n            schedules:newSchedule,\n            bookForm:{\n                start_time:'',\n                end_time:'',\n                event:''\n            }\n        })\n        \n        //setting new schedule for fetch post\n        const reservation={\n            event:this.state.bookForm.event,\n            date:this.state.selectedDate,\n            start_time:this.state.bookForm.start_time,\n            end_time:this.state.bookForm.end_time,\n            mod_id:this.state.selectedMod,\n            lecture_room_id:roomId,\n        }\n        //fetch post to lecture_schedules\n                                                \n        fetch('http://localhost:3000/api/v1/lecture_schedules',{\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify(reservation)\n        }).then(res=>res.json())\n            .then(justAddedSch=>this.setState({newScheduleId:justAddedSch.id}))\n      \n    }\n\n    componentDidMount(){\n      fetch('http://localhost:3000/api/v1/lecture_rooms')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({schedules}))\n\n      fetch('http://localhost:3000/api/v1/mods')\n        .then(res=>res.json())\n        .then(mods=>this.setState({allMods:mods}))\n    }\n\n\n  render() {\n    console.log('start time home render', this.state.bookForm);\n    console.log('type of start time', typeof(this.state.bookForm.start_time));\n    console.log('start time empty?', this.state.bookForm.start_time==='');\n    return (\n      <div className=\"App\">\n        <header>\n          <div id=\"logo\">\n            <span>\n              Book <b>Lecture Room</b>\n            </span><br/>\n            <span className=\"icon swing\">date_range</span>\n          </div>\n        </header>\n        \n          <SchedulePageContainer \n              currentMonth={this.state.currentMonth}\n              renderMod={this.renderMod}\n              clickMod\n              selectedDate={this.state.selectedDate}\n              nextMonth={this.nextMonth}\n              prevMonth={this.prevMonth}\n              onDateClick={this.onDateClick}\n              schedules={this.state.schedules}\n              onBookItHandler={this.onSubmitFormHandler}\n              onChangeBookForm={this.onChangeBookForm}\n              event={this.state.bookForm.event}\n              bookForm={this.state.bookForm}\n              onDeleteHandler={this.onDeleteHandler}\n              onEditHandler={this.onEditHandler}\n              selectedMod={this.state.selectedMod}\n              onChangeModSelectionHandler={this.onChangeModSelectionHandler}\n              allMods={this.state.allMods}\n              onChangeSortHandler={this.onChangeSortHandler}\n          />\n          \n        \n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}
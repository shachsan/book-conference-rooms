{"ast":null,"code":"import _classCallCheck from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Calendar.js\";\nimport React from \"react\";\nimport dateFns from \"date-fns\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date()\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.renderDays = function () {\n      var dateFormat = \"ddd\";\n      var days = [];\n      var startDate = dateFns.startOfWeek(_this.state.currentMonth, {\n        weekStartsOn: 1\n      });\n\n      for (var i = 0; i < 7; i++) {\n        days.push(React.createElement(\"div\", {\n          className: \"col col-center\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"days row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, days);\n    };\n\n    _this.renderCells = function () {\n      var _this$state = _this.state,\n          currentMonth = _this$state.currentMonth,\n          selectedDate = _this$state.selectedDate;\n      var monthStart = dateFns.startOfMonth(currentMonth);\n      var monthEnd = dateFns.endOfMonth(monthStart);\n      var startDate = dateFns.startOfWeek(monthStart);\n      var endDate = dateFns.endOfWeek(monthEnd, {});\n    };\n\n    _this.onDateClick = function (day) {};\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      console.log(this.state.currentMonth);\n      var dateFormat = \"MMMM YYYY\";\n      return React.createElement(\"div\", {\n        className: \"header row flex-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"chevron_left\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, dateFns.format(this.state.currentMonth, dateFormat))), React.createElement(\"div\", {\n        className: \"col col-end\",\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"chevron_right\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderHeader(), this.renderDays(), this.renderCells());\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Calendar.js"],"names":["React","dateFns","Calendar","state","currentMonth","Date","selectedDate","nextMonth","setState","addMonths","prevMonth","subMonths","renderDays","dateFormat","days","startDate","startOfWeek","weekStartsOn","i","push","format","addDays","renderCells","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","onDateClick","day","console","log","renderHeader","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dateFns from \"date-fns\";\n\nclass Calendar extends React.Component {\n    state = {\n        currentMonth: new Date(),\n        selectedDate: new Date()\n    };\n\n    renderHeader() {\n        console.log(this.state.currentMonth);\n        const dateFormat = \"MMMM YYYY\";\n        return (\n          <div className=\"header row flex-middle\">\n            <div className=\"col col-start\">\n              <div className=\"icon\" onClick={this.prevMonth}>\n                chevron_left\n              </div>\n            </div>\n            <div className=\"col col-center\">\n              <span>\n                {dateFns.format(this.state.currentMonth, dateFormat)}\n              </span>\n            </div>\n            <div className=\"col col-end\" onClick={this.nextMonth}>\n              <div className=\"icon\">chevron_right</div>\n            </div>\n          </div>\n        );\n      }\n\n    \n      nextMonth = () => {\n        this.setState({\n          currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n        });\n      };\n      prevMonth = () => {\n        this.setState({\n          currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n        });\n      };\n\n      renderDays=()=>{\n        const dateFormat = \"ddd\";\n        const days = [];\n        let startDate = dateFns.startOfWeek(this.state.currentMonth, {weekStartsOn:1});\n        for (let i = 0; i < 7; i++) {\n          days.push(\n            <div className=\"col col-center\" key={i}>\n              {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n            </div>\n          );\n        }\n        return <div className=\"days row\">{days}</div>;\n      }\n\n    renderCells=()=>{\n        const { currentMonth, selectedDate } = this.state;\n        const monthStart = dateFns.startOfMonth(currentMonth);\n        const monthEnd = dateFns.endOfMonth(monthStart);\n        const startDate = dateFns.startOfWeek(monthStart);\n        const endDate = dateFns.endOfWeek(monthEnd,{});\n    }\n\n    onDateClick = day => {};\n\n   \n\n  render() {\n    return (\n        <div className=\"calendar\">\n            {this.renderHeader()}\n            {this.renderDays()}\n            {this.renderCells()}\n        </div>\n    );\n  }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}
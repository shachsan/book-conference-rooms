{"ast":null,"code":"import _objectSpread from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js\";\nimport React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport \"../App.css\";\nimport LectureRoom from './LectureRoom';\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      selectedMod: '',\n      allMods: [],\n      // header:'home',\n      // modClick:'all',\n      sort: '',\n      schedules: [],\n      newScheduleId: '',\n      bookForm: {\n        start_time: '',\n        end_time: '',\n        event: ''\n      }\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.convertToTime = function (min) {\n      if (!min.includes(':')) {\n        var hours, minutes;\n        hours = Math.floor(min / 60);\n        minutes = min % 60;\n\n        if (minutes < 10) {\n          minutes = '0' + minutes; // adding leading zero\n        }\n\n        if (hours < 10) hours = '0' + hours;\n        return hours + ':' + minutes;\n      } else {\n        return min;\n      }\n    };\n\n    _this.getModName = function (modId) {\n      var mod = _this.state.allMods.filter(function (mod) {\n        return mod.id === modId;\n      });\n\n      return mod[0].name;\n    };\n\n    _this.modClickHandler = function (e) {\n      _this.setState({\n        current: current\n      });\n    };\n\n    _this.onChangeSortHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  sort: e.target.value\n                });\n\n              case 2:\n                _this.sortSchedules(_this.state.sort);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.sortSchedules = function (type) {\n      if (type === 'time') {\n        var newSchedule = _toConsumableArray(_this.state.schedules);\n\n        newSchedule.forEach(function (lectureRoom) {\n          lectureRoom.lecture_schedules.sort(function (s1, s2) {\n            if (s1.start_time > s2.start_time) return 1;else if (s1.start_time < s2.start_time) return -1;\n          });\n        });\n\n        _this.setState({\n          schedules: newSchedule\n        });\n      } else if (type === 'mod') {\n        var _newSchedule = _toConsumableArray(_this.state.schedules);\n\n        _newSchedule.forEach(function (lectureRoom) {\n          lectureRoom.lecture_schedules.sort(function (s1, s2) {\n            s1.modName = _this.getModName(s1.mod_id);\n            s2.modName = _this.getModName(s2.mod_id);\n            console.log(s1.modName);\n            if (s1.modName > s2.modName) return 1;else if (s1.modName < s2.modName) return -1;\n          });\n        });\n\n        _this.setState({\n          schedules: _newSchedule\n        });\n      }\n    };\n\n    _this.renderMod = function (e) {\n      _this.setState({\n        modClick: e.target.id\n      });\n\n      console.log(e.target.id); // showMod:e.target.value\n    };\n\n    _this.onChangeModSelectionHandler = function (e) {\n      _this.setState({\n        selectedMod: e.target.value\n      });\n    };\n\n    _this.onChangeBookForm = function (e) {\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm[e.target.name] = e.target.value;\n      newBookForm.start_time = _this.convertToTime(newBookForm.start_time);\n      newBookForm.end_time = _this.convertToTime(newBookForm.end_time);\n\n      _this.setState({\n        bookForm: newBookForm\n      });\n    };\n\n    _this.onEditHandler = function (e, schedule) {\n      e.preventDefault();\n      console.log('schedule to be edited:', schedule);\n      console.log('new schedule', _this.state.bookForm);\n      var updateSch;\n      var id = schedule.id;\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.id === schedule.lecture_room_id) {\n          lectureRoom.lecture_schedules.forEach(function (sch) {\n            if (sch.id === schedule.id) {\n              sch.start_time = newBookForm.start_time;\n              sch.end_time = newBookForm.end_time;\n              sch.event = newBookForm.event; // sch.event=newBookForm.\n\n              updateSch = {\n                start_time: newBookForm.start_time,\n                end_time: newBookForm.end_time,\n                event: newBookForm.event // mod_id:this.state.selectedMod\n\n              };\n              console.log('change event', sch.event);\n            }\n          });\n        }\n      });\n      fetch(\"http://localhost:3000/api/v1/lecture_schedules/\".concat(id), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateSch)\n      });\n    };\n\n    _this.onDeleteHandler = function (schedule) {\n      var id = schedule.id;\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (room) {\n        if (room.id === schedule.lecture_room_id) {\n          room.lecture_schedules.forEach(function (sch) {\n            if (sch.id === schedule.id) {\n              var i = room.lecture_schedules.indexOf(sch);\n              room.lecture_schedules.splice(i, 1);\n            }\n          });\n        }\n      });\n\n      _this.setState({\n        schedules: newSchedule\n      });\n\n      fetch(\"http://localhost:3000/api/v1/lecture_schedules/\".concat(id), {\n        method: 'DELETE'\n      });\n    };\n\n    _this.onSubmitFormHandler = function (e, room) {\n      e.preventDefault(); //fetch post to lecture_schedules\n\n      var newBookForm = _objectSpread({}, _this.state.bookForm);\n\n      var roomId;\n      newBookForm.start_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.start_time + 'Z';\n      newBookForm.end_time = dateFns.format(_this.state.selectedDate, 'YYYY-MM-DD') + 'T' + newBookForm.end_time + 'Z';\n\n      var newBooking = _objectSpread({}, newBookForm, {\n        date: _this.state.selectedDate,\n        id: _this.state.newScheduleId,\n        mod_id: _this.state.selectedMod\n      });\n\n      console.log(newBooking);\n\n      var newSchedule = _toConsumableArray(_this.state.schedules);\n\n      newSchedule.forEach(function (lectureRoom) {\n        if (lectureRoom.name === room) {\n          roomId = lectureRoom.id;\n          lectureRoom.lecture_schedules = [].concat(_toConsumableArray(lectureRoom.lecture_schedules), [newBooking]);\n        }\n      });\n      console.log('before optimistic', newSchedule); //for optimistic update\n\n      _this.setState({\n        schedules: newSchedule,\n        bookForm: {\n          start_time: '',\n          end_time: '',\n          event: ''\n        }\n      }); //setting new schedule for fetch post\n\n\n      var reservation = {\n        event: _this.state.bookForm.event,\n        date: _this.state.selectedDate,\n        start_time: _this.state.bookForm.start_time,\n        end_time: _this.state.bookForm.end_time,\n        mod_id: _this.state.selectedMod,\n        lecture_room_id: roomId //fetch post to lecture_schedules\n\n      };\n      fetch('http://localhost:3000/api/v1/lecture_schedules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (justAddedSch) {\n        return _this.setState({\n          newScheduleId: justAddedSch.id\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:3000/api/v1/lecture_rooms').then(function (res) {\n        return res.json();\n      }).then(function (schedules) {\n        return _this2.setState({\n          schedules: schedules\n        });\n      });\n      fetch('http://localhost:3000/api/v1/mods').then(function (res) {\n        return res.json();\n      }).then(function (mods) {\n        return _this2.setState({\n          allMods: mods\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('start time home render', this.state.bookForm);\n      console.log('type of start time', typeof this.state.bookForm.start_time);\n      console.log('start time empty?', this.state.bookForm.start_time === '');\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(\"header\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }, \"Manage \", React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, \"School\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"icon swing\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, \"date_range\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/booking\",\n        render: function render(props) {\n          return React.createElement(\"header\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"logo\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299\n            },\n            __self: this\n          }, \"Book \", React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300\n            },\n            __self: this\n          }, \"Lecture Room\")), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 301\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"icon swing\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302\n            },\n            __self: this\n          }, \"date_range\")));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      })), React.createElement(SchedulePageContainer, {\n        currentMonth: this.state.currentMonth,\n        renderMod: this.renderMod,\n        modClick: this.state.modClick,\n        selectedDate: this.state.selectedDate,\n        nextMonth: this.nextMonth,\n        prevMonth: this.prevMonth,\n        onDateClick: this.onDateClick,\n        modClickHandler: this.modClickHandler,\n        schedules: this.state.schedules,\n        onBookItHandler: this.onSubmitFormHandler,\n        onChangeBookForm: this.onChangeBookForm,\n        event: this.state.bookForm.event,\n        bookForm: this.state.bookForm,\n        onDeleteHandler: this.onDeleteHandler,\n        onEditHandler: this.onEditHandler,\n        selectedMod: this.state.selectedMod,\n        onChangeModSelectionHandler: this.onChangeModSelectionHandler,\n        allMods: this.state.allMods,\n        onChangeSortHandler: this.onChangeSortHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/sanjaysai/Documents/Dev/web/Mod4/project/school-management-frontend/src/components/Home.js"],"names":["React","SchedulePageContainer","dateFns","BrowserRouter","Router","Route","Switch","LectureRoom","Home","state","currentMonth","Date","selectedDate","selectedMod","allMods","sort","schedules","newScheduleId","bookForm","start_time","end_time","event","nextMonth","setState","addMonths","prevMonth","subMonths","onDateClick","day","convertToTime","min","includes","hours","minutes","Math","floor","getModName","modId","mod","filter","id","name","modClickHandler","e","current","onChangeSortHandler","target","value","sortSchedules","type","newSchedule","forEach","lectureRoom","lecture_schedules","s1","s2","modName","mod_id","console","log","renderMod","modClick","onChangeModSelectionHandler","onChangeBookForm","newBookForm","onEditHandler","schedule","preventDefault","updateSch","format","lecture_room_id","sch","fetch","method","headers","body","JSON","stringify","onDeleteHandler","room","i","indexOf","splice","onSubmitFormHandler","roomId","newBooking","date","reservation","then","res","json","justAddedSch","mods","props","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SchedulePageContainer from '../containers/SchedulePageContainer';\nimport dateFns from \"date-fns\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport \"../App.css\";\nimport LectureRoom from './LectureRoom';\n\nclass Home extends React.Component {\n      state = {\n        currentMonth: new Date(),\n        selectedDate: new Date(),\n        selectedMod:'',\n        allMods:[],\n        // header:'home',\n        // modClick:'all',\n        sort:'',\n        schedules:[],\n        newScheduleId:'',\n        bookForm:{\n          start_time:'',\n          end_time:'',\n          event:''\n        }\n\n    };\n\n    nextMonth = () => {\n      this.setState({\n        currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\n      });\n    };\n    prevMonth = () => {\n      this.setState({\n        currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\n      });\n    };\n\n    onDateClick = day => {\n      this.setState({\n        selectedDate: day\n      });\n    };\n\n    convertToTime=(min) => {\n        if(!min.includes(':')){\n            let hours, minutes;\n            hours = Math.floor(min / 60);\n            minutes = min % 60;\n            if (minutes < 10){\n                minutes = '0' + minutes; // adding leading zero\n            }\n           \n            if (hours < 10)\n                hours='0'+ hours\n\n            return hours+':'+minutes\n        }else{\n            return min\n        }\n    }\n\n    getModName=(modId) => {\n        const mod=this.state.allMods.filter(mod=>mod.id===modId)\n        return mod[0].name;\n    }\n\n    modClickHandler=(e) => {\n        this.setState({\n            current\n        })\n    }\n\n    \n    onChangeSortHandler=async(e) => {\n        await this.setState({\n            sort:e.target.value\n        })\n\n        this.sortSchedules(this.state.sort);\n    }\n\n    //sort function\n    sortSchedules=(type) => {\n        if (type==='time'){\n            const newSchedule = [...this.state.schedules]\n            newSchedule.forEach(lectureRoom=>{\n                  lectureRoom.lecture_schedules.sort((s1, s2)=>{\n                            if (s1.start_time > s2.start_time)\n                                return 1\n                            else if (s1.start_time < s2.start_time)\n                                return -1\n                    })\n            })\n\n            this.setState({\n                schedules:newSchedule\n            })\n        }else if(type==='mod'){\n            const newSchedule = [...this.state.schedules]\n            newSchedule.forEach(lectureRoom=>{\n                  lectureRoom.lecture_schedules.sort((s1, s2)=>{\n                        s1.modName=this.getModName(s1.mod_id)\n                        s2.modName=this.getModName(s2.mod_id)\n                        console.log(s1.modName);\n                            if (s1.modName > s2.modName)\n                                return 1\n                            else if (s1.modName < s2.modName)\n                                return -1\n                    })\n            })\n\n            this.setState({\n                schedules:newSchedule\n            })\n        }\n\n    }\n\n    renderMod=(e) => {\n        this.setState({\n\n            modClick:e.target.id\n        })\n        console.log(e.target.id);\n        // showMod:e.target.value\n    }\n\n    //Handle when mod selected during lecture room suggestion\n    onChangeModSelectionHandler=(e) => {\n         this.setState({\n            selectedMod:e.target.value,\n        })\n    }\n\n    onChangeBookForm=(e) => {\n        \n        \n      const newBookForm={...this.state.bookForm}\n\n      newBookForm[e.target.name]=e.target.value\n      newBookForm.start_time=this.convertToTime(newBookForm.start_time)\n      newBookForm.end_time=this.convertToTime(newBookForm.end_time)\n      \n      this.setState({\n        bookForm:newBookForm\n      })\n    }\n\n    //Edit schedule\n    onEditHandler=(e,schedule) => {\n        e.preventDefault();\n        console.log('schedule to be edited:', schedule);\n        console.log('new schedule', this.state.bookForm);\n        let updateSch;\n        const id=schedule.id;\n\n        const newBookForm={...this.state.bookForm}\n        newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n        newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n        \n        \n        let newSchedule=[...this.state.schedules]\n        newSchedule.forEach(lectureRoom=>{\n          if(lectureRoom.id===schedule.lecture_room_id){\n            lectureRoom.lecture_schedules.forEach(sch=>{\n                if(sch.id===schedule.id){\n                    sch.start_time=newBookForm.start_time\n                    sch.end_time=newBookForm.end_time\n                    sch.event=newBookForm.event\n                    // sch.event=newBookForm.\n                    updateSch={\n                        start_time:newBookForm.start_time,\n                        end_time:newBookForm.end_time,\n                        event:newBookForm.event,\n                        // mod_id:this.state.selectedMod\n                    }\n                    console.log('change event',sch.event);\n                }\n            })\n          }\n\n        })\n\n        fetch(`http://localhost:3000/api/v1/lecture_schedules/${id}`,{\n            method: 'PATCH',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify(updateSch)\n        })\n    }\n\n    //Delete schedule Handler\n    onDeleteHandler=(schedule) => {\n        const id=schedule.id\n        let newSchedule=[...this.state.schedules];\n            newSchedule.forEach(room=>{\n                if(room.id===schedule.lecture_room_id){\n                    room.lecture_schedules.forEach(sch=>{\n                        if(sch.id===schedule.id){\n                            let i=room.lecture_schedules.indexOf(sch);\n                            room.lecture_schedules.splice(i,1)\n                        }\n                    })\n                }\n            })\n\n        this.setState({\n            schedules:newSchedule\n        })\n\n        fetch(`http://localhost:3000/api/v1/lecture_schedules/${id}`,{\n          method:'DELETE'\n        })\n    }\n    \n    onSubmitFormHandler=(e, room) => {\n      e.preventDefault();\n       //fetch post to lecture_schedules\n       \n       const newBookForm={...this.state.bookForm}\n       let roomId;\n       newBookForm.start_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.start_time+'Z'\n       newBookForm.end_time=dateFns.format(this.state.selectedDate, 'YYYY-MM-DD')+'T'+newBookForm.end_time+'Z'\n       \n       const newBooking= {...newBookForm, date:this.state.selectedDate, id:this.state.newScheduleId, mod_id:this.state.selectedMod}\n       console.log(newBooking);\n       let newSchedule=[...this.state.schedules]\n       newSchedule.forEach(lectureRoom=>{\n           if(lectureRoom.name===room){\n               roomId=lectureRoom.id\n               lectureRoom.lecture_schedules=[...lectureRoom.lecture_schedules, newBooking]\n            }\n            \n        })\n        \n        console.log('before optimistic',newSchedule);\n        //for optimistic update\n        this.setState({\n            schedules:newSchedule,\n            bookForm:{\n                start_time:'',\n                end_time:'',\n                event:''\n            }\n        })\n        \n        //setting new schedule for fetch post\n        const reservation={\n            event:this.state.bookForm.event,\n            date:this.state.selectedDate,\n            start_time:this.state.bookForm.start_time,\n            end_time:this.state.bookForm.end_time,\n            mod_id:this.state.selectedMod,\n            lecture_room_id:roomId,\n        }\n        //fetch post to lecture_schedules\n                                                \n        fetch('http://localhost:3000/api/v1/lecture_schedules',{\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body:JSON.stringify(reservation)\n        }).then(res=>res.json())\n            .then(justAddedSch=>this.setState({newScheduleId:justAddedSch.id}))\n      \n    }\n\n    componentDidMount(){\n      fetch('http://localhost:3000/api/v1/lecture_rooms')\n        .then(res=>res.json())\n        .then(schedules=>this.setState({schedules}))\n\n      fetch('http://localhost:3000/api/v1/mods')\n        .then(res=>res.json())\n        .then(mods=>this.setState({allMods:mods}))\n    }\n\n\n  render() {\n    console.log('start time home render', this.state.bookForm);\n    console.log('type of start time', typeof(this.state.bookForm.start_time));\n    console.log('start time empty?', this.state.bookForm.start_time==='');\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path='/' render={(props)=>(\n                        <header>\n                            <div id=\"logo\">\n                                <span>\n                                Manage <b>School</b>\n                                </span><br/>\n                                <span className=\"icon swing\">date_range</span>\n                            </div>\n                        </header>\n                    )}/>\n\n                    <Route exact path='/booking' render={(props)=>(\n                        <header>\n                            <div id=\"logo\">\n                                <span>\n                                Book <b>Lecture Room</b>\n                                </span><br/>\n                                <span className=\"icon swing\">date_range</span>\n                            </div>\n                        </header>\n                    )}/>\n                </Switch>\n                \n                <SchedulePageContainer \n                    currentMonth={this.state.currentMonth}\n                    renderMod={this.renderMod}\n                    modClick={this.state.modClick}\n                    selectedDate={this.state.selectedDate}\n                    nextMonth={this.nextMonth}\n                    prevMonth={this.prevMonth}\n                    onDateClick={this.onDateClick}\n                    modClickHandler={this.modClickHandler}\n                    schedules={this.state.schedules}\n                    onBookItHandler={this.onSubmitFormHandler}\n                    onChangeBookForm={this.onChangeBookForm}\n                    event={this.state.bookForm.event}\n                    bookForm={this.state.bookForm}\n                    onDeleteHandler={this.onDeleteHandler}\n                    onEditHandler={this.onEditHandler}\n                    selectedMod={this.state.selectedMod}\n                    onChangeModSelectionHandler={this.onChangeModSelectionHandler}\n                    allMods={this.state.allMods}\n                    onChangeSortHandler={this.onChangeSortHandler}\n                />\n                \n                \n            </div>\n      </Router>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}